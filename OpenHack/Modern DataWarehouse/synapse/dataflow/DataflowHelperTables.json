{
	"name": "DataflowHelperTables",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DateTable",
						"type": "DatasetReference"
					},
					"name": "DateTable"
				},
				{
					"dataset": {
						"referenceName": "TimeTable",
						"type": "DatasetReference"
					},
					"name": "TimeTable"
				},
				{
					"dataset": {
						"referenceName": "NumberTable",
						"type": "DatasetReference"
					},
					"name": "NumberTable"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "Date"
				},
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "Time"
				},
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "Numbers"
				}
			],
			"transformations": [],
			"scriptLines": [
				"source(output(",
				"          DateSK as integer,",
				"          DateValue as date,",
				"          DateYear as integer,",
				"          DateMonth as integer,",
				"          DateDay as integer,",
				"          DateDayOfWeek as integer,",
				"          DateDayOfYear as integer,",
				"          DateWeekOfYear as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> DateTable",
				"source(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> TimeTable",
				"source(output(",
				"          Number as integer",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table',",
				"     staged: true) ~> NumberTable",
				"DateTable sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     compressionType: 'snappy',",
				"     compressionLevel: 'Fastest',",
				"     fileSystem: 'silver',",
				"     folderPath: 'Date',",
				"     truncate:true,",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Date",
				"TimeTable sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     compressionType: 'snappy',",
				"     compressionLevel: 'Fastest',",
				"     fileSystem: 'silver',",
				"     folderPath: 'Time',",
				"     truncate:true,",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Time",
				"NumberTable sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'delta',",
				"     compressionType: 'snappy',",
				"     compressionLevel: 'Fastest',",
				"     fileSystem: 'silver',",
				"     folderPath: 'Numbers',",
				"     truncate:true,",
				"     mergeSchema: false,",
				"     autoCompact: false,",
				"     optimizedWrite: false,",
				"     vacuum: 0,",
				"     deletable:false,",
				"     insertable:true,",
				"     updateable:false,",
				"     upsertable:false,",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> Numbers"
			]
		}
	}
}