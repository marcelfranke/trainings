{
	"name": "DataflowFourthCoffeeCustomers",
	"properties": {
		"folder": {
			"name": "FourthCoffee"
		},
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "Customers"
				},
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "CustomersSilver"
				},
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "AddressesSilver"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "CustomerSink"
				},
				{
					"linkedService": {
						"referenceName": "southridgeanalyticshub-WorkspaceDefaultStorage",
						"type": "LinkedServiceReference"
					},
					"name": "AddressesSink"
				},
				{
					"name": "CustomerSK"
				},
				{
					"name": "AddressSK"
				}
			],
			"transformations": [
				{
					"name": "AddDataSourceId"
				},
				{
					"name": "GetMaxCustomerSK"
				},
				{
					"name": "SelectColumns"
				},
				{
					"name": "GenerateCustomerSK"
				},
				{
					"name": "GenerateRowNumber"
				},
				{
					"name": "GetMaxAddressSK"
				},
				{
					"name": "GenerateAddressSK"
				},
				{
					"name": "GenerateRowNumber2"
				}
			],
			"script": "source(output(\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as integer,\n\t\tPhoneNumber as long,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delimited',\n\tfileSystem: 'bronze',\n\tfolderPath: 'FourthCoffee/Rentals',\n\tfileName: 'Customers.csv',\n\tcolumnDelimiter: ',',\n\tescapeChar: '\\\\',\n\tquoteChar: '\\\"',\n\tcolumnNamesAsHeader: true) ~> Customers\nsource(output(\n\t\tCustomerSK as long,\n\t\tCustomerID as string,\n\t\tLastName as string,\n\t\tFirstName as string,\n\t\tPhoneNumber as string,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date,\n\t\tDataSourceId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'silver',\n\tfolderPath: 'Customers') ~> CustomersSilver\nsource(output(\n\t\tAddressSK as long,\n\t\tAddressID as string,\n\t\tCustomerID as string,\n\t\tAddressLine1 as string,\n\t\tAddressLine2 as string,\n\t\tCity as string,\n\t\tState as string,\n\t\tZipCode as string,\n\t\tCreatedDate as date,\n\t\tUpdatedDate as date,\n\t\tDataSourceId as integer\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false,\n\tformat: 'delta',\n\tfileSystem: 'silver',\n\tfolderPath: 'Addresses') ~> AddressesSilver\nCustomers derive(NewPhoneNumber = toString(PhoneNumber),\n\t\tDataSourceId = 3,\n\t\tAddressId = uuid(),\n\t\tNewZipCode = toString(ZipCode)) ~> AddDataSourceId\nCustomersSilver aggregate(MaxCustomerSK = max(CustomerSK)) ~> GetMaxCustomerSK\nAddDataSourceId select(mapColumn(\n\t\tCustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber = NewPhoneNumber,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tDataSourceId\n\t),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> SelectColumns\nGenerateRowNumber derive(CustomerSK = RowNumber + CustomerSK#outputs()[1].MaxCustomerSK) ~> GenerateCustomerSK\nSelectColumns keyGenerate(output(RowNumber as long),\n\tstartAt: 1L) ~> GenerateRowNumber\nAddressesSilver aggregate(MaxAddressSK = max(AddressSK)) ~> GetMaxAddressSK\nGenerateRowNumber2 derive(AddressSK = ERROR_FUNCTION('RowNumber + AddressSK#')) ~> GenerateAddressSK\nAddDataSourceId keyGenerate(output(RowNumber as long),\n\tstartAt: 1L) ~> GenerateRowNumber2\nGenerateCustomerSK sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'silver',\n\tfolderPath: 'Customers',\n\tmergeSchema: false,\n\tautoCompact: true,\n\toptimizedWrite: true,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tCustomerSK,\n\t\tCustomerID,\n\t\tLastName,\n\t\tFirstName,\n\t\tPhoneNumber,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tDataSourceId\n\t)) ~> CustomerSink\nGenerateAddressSK sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tformat: 'delta',\n\tcompressionType: 'snappy',\n\tcompressionLevel: 'Fastest',\n\tfileSystem: 'silver',\n\tfolderPath: 'Addresses',\n\tmergeSchema: false,\n\tautoCompact: true,\n\toptimizedWrite: true,\n\tvacuum: 0,\n\tdeletable:false,\n\tinsertable:true,\n\tupdateable:false,\n\tupsertable:false,\n\tkeys:['CustomerID'],\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tmapColumn(\n\t\tAddressID = AddressId,\n\t\tCustomerID,\n\t\tAddressLine1,\n\t\tAddressLine2,\n\t\tCity,\n\t\tState,\n\t\tZipCode = NewZipCode,\n\t\tCreatedDate,\n\t\tUpdatedDate,\n\t\tDataSourceId\n\t)) ~> AddressesSink\nGetMaxCustomerSK sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1) ~> CustomerSK\nGetMaxAddressSK sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true,\n\tstore: 'cache',\n\tformat: 'inline',\n\toutput: false,\n\tsaveOrder: 1) ~> AddressSK"
		}
	}
}